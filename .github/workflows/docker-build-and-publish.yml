name: Build and Publish

run-name: >
  ${{ github.workflow }}: ${{ github.event_name }} for ${{ github.ref_name }} by @${{ github.actor }}

on:
  push:
    paths:
      - 'app/**'

permissions: 
  id-token: write

env:
  REGISTRY: ${{ vars.AZURE_ACR_NAME }}
  IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Container Registry Login
        run: |
          az acr login --name ${{ env.REGISTRY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image to ACR
        run: |
          cd app
          # Build the Docker image with a tag based on the commit SHA
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          
          # Push the image with the commit SHA tag
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          # If running on the main branch, also tag and push as "latest"
          if [ "${{ github.ref_name }}" == "main" ]; then
            docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          fi
